'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = restrictToChatMember;

var _feathersErrors = require('feathers-errors');

var _feathersErrors2 = _interopRequireDefault(_feathersErrors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function restrictToChatMember() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return function (hook) {
    options = Object.assign({
      userIdField: 'telegramId',
      chatIdField: 'telegramId',
      fromMessage: true
    }, options);
    if (hook.type !== 'before') {
      throw new Error('The \'restrictToChatMember\' hook should only be used as a \'before\' hook.');
    }
    var userId = hook.params.user[options.userIdField];
    var chatId = void 0;
    if (hook.params.telegram && options.fromMessage) {
      chatId = hook.params.message.chat.id;
    } else {
      chatId = hook.id || hook.query[chatIdField];
    }
    return hook.app.telegram.getChatMember(chatId, userId).then(function () {
      return hook;
    }).catch(function () {
      throw new _feathersErrors2.default.Forbidden('You are not part of this chat');
      return hook;
    });
  };
}
module.exports = exports['default'];